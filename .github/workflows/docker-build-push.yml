# - build single image with multiple tags
# - this is a reuseable workflow
#
# secrets input
# - username         docker login username
# - password         docker login token (under docker repo security setting)
#
# inputs
# - org              docker repo org name
# - image            docker repo image name
# - platforms        what platforms to build? comma-separated list
# - semver           semantic version, e.g. "0.1.0"
# - tag-full-semer   add full version tag? e.g. "0.1.0"
# - tag-major-minor  add major.minor version tag? e.g. "0.1"
# - tag-major        add major version tag? e.g. "0"
# - tag-latest       add "latest" tag?
# - tag-build-date   add build date tag? e.g. "0.1.0-2023-01-01"
# - build-date-tz    use TZ to determinte the build date
# - tag-special-name add tag with special name? (see special-name)
# - special-name     create tag "0.1.0-alpha"

# xxx: need build args
# xxx: need to check input values
# xxx: build context? what if dockerfile is not at root directory?
name: Docker Build & Push
on:
  workflow_call:
    secrets:
      username:
        required: true
      password:
        required: true
    inputs:
      org:
        type: string
        default: frederickwong
      image:
        type: string
        default: sandbox
      platforms:
        type: string
        default: linux/amd64,linux/arm64
      semver:
        type: string
        default: 0.1.0
      tag-full-semver:
        type: boolean
        default: true
      tag-major-minor:
        type: boolean
        default: true
      tag-major:
        type: boolean
        default: false
      tag-latest:
        type: boolean
        default: true
      tag-build-date:
        type: boolean
        default: true
      build-date-tz:
        type: string
        default: America/Los_Angeles
      tag-special-name:
        type: boolean
        default: false
      special-name:
        type: string
        default: alpha
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Get the build date (if needed)
      - id: get-date
        name: Get Build Date
        if: ${{ inputs.tag-build-date }}
        env:
          TZ: ${{ inputs.build-date-tz }}
        run: echo "result=`date +'%Y-%m-%d'`" >> "$GITHUB_OUTPUT"

      # Generate the build tags for the docker image
      - id: docker-meta
        name: Build Docker Meta Data
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.org }}/${{ inputs.image }}
          # use "value" to override the default "semver" type behavior (i.e. getting version from repo tag)
          tags: |
            type=semver,enable=${{inputs.tag-full-semver}},pattern={{version}},value=${{inputs.semver}}
            type=semver,pattern={{major}}.{{minor}},value=${{inputs.semver}}
            type=semver,enable=${{inputs.tag-build-date}},pattern={{version}}-${{steps.get-date.outputs.result}},value=${{inputs.semver}}
            type=semver,enable=${{inputs.tag-special-name}},pattern={{version}}-${{inputs.special-name}},value=${{inputs.semver}}
            type=raw,enable=${{inputs.tag-latest}},value=latest

      # Docker Build Setup - Step 1
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      # Docker Build Setup - Step 2
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      # Docker Build Setup - Step 3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}

      # Checkout Repo
      - name: Checkout Repo
        uses: actions/checkout@v3

      # Start the build and push to Docker
      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: ${{ inputs.platforms }}
          tags: ${{ steps.docker-meta.outputs.tags }}
